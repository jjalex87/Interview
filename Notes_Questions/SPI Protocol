Source:
1. https://electrosome.com/spi/

SPI (Serial Peripheral Interface) is a full duplex synchronous serial communication interface used for short distance communications. 
It is usually used for communication between different modules in a same device or PCB. SPI devices communicates each other using a
master slave architecture with a single master. Multiple slaves are supported through individual slave select lines.

SPI Interface
SPI is called as a 4-wire bus as it requires four wires for its communication as shown below. In the case of single slave communications
we need only 3 wires, as slave select (SS) is not required. So SPI requires more communication lines in contrast to UART, I2C, USB etc.

SCK or SCLK : Serial Clock, clock generated by master
MOSI or SDO : Master Output Slave Input, data output from master
MISO or SDI : Master Input Slave Output, data output from slave
SS          : Slave Select, often an active low input of a slave
When multiple slave devices are used, an independent slave select line is connected from master to each slave device as below.
Master will select only one slave at a time. Mostly slave devices will be equipped with tri-state outputs. So when they are not selected, 
their output lines appears disconnected.

shift registers in the master and slave devices are connected together such that it forms a circular buffer. These registers operate 
in Serial In/Serial Out (SISO) mode. Output of a register is connected to the input of another register and vice versa. You can see that 
the clock signal is generated by the master device.

 Master will generate clock whenever it wants to write data to a Slave device. After 8 clock pulses data in the master device (A7 ~ A0) 
 is transferred to slave device and data in the slave device (B7 ~ B0) is transferred to the master device.
 
 Buffer Register acts as an interface between user (processor, programmer) and SPI. Usually shift register won’t be directly accessible. 
 So if we need to transmit data, we will write it to the buffer register. So it will automatically written to shift register when it is 
 free and transmission will start. Similarly data is received in the shift register is automatically transferred to buffer register once 
 the reception is complete. We can easily read from it. Thus buffer register will avoid all glitches that can happen if we try to read or
 write to shift register directly while transmission is taking place.
 
Daisy Chain Configuration
In this configuration SPI can be connected one after another in a serial form. In this configuration a single slave select line is used 
to select all daisy chain slaves. Whole chain acts like a communication through shift registers connected in series. Each daisy chain 
slave is supposed to send out exact copy of data received in the first group of clock cycles during the second group of clock cycles.

This configuration is commonly used in JTAG.

As you see above SPI communication is always full duplex. Master will generate clock only when it needs to write data to a slave device. 
So for reading data from a slave device we can just send a dummy data to slave device.

SD Cards and MicroSD cards uses SPI protocol for data transfer.

Advantages
Simple hardware
Full duplex communication
Simple software implementation
High Speed
No speed limit (practically it will be limited by the clock frequency, rise time, fall time etc.)
Not Limited to 8 bit data
Signals are unidirectional through all lines, makes easy isolation
No need of unique address in slaves like in RS485 or I2C. 
No need of precision oscillators in slave devices as it uses master’s clock
No complex transceivers are required


Disadvantages
More pins/wires are required. Minimum 3 wires (in single slave) are required.
Can be used only from short distances
No error detection protocol is defined
Usually supports only one master
